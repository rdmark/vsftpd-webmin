<DT><B>allow_anon_ssl</B>

<DD>
Only applies if
<B>ssl_enable</B>

is active. If set to YES, anonymous users will be allowed to use secured SSL
connections.
<P>
Default: NO
<DT><B>anon_mkdir_write_enable</B>

<DD>

If set to YES, anonymous users will be permitted to create new directories
under certain conditions. For this to work, the option
<B>write_enable</B>

must be activated, and the anonymous ftp user must have write permission on
the parent directory.
<P>
Default: NO
<DT><B>anon_other_write_enable</B>

<DD>
If set to YES, anonymous users will be permitted to perform write operations
other than upload and create directory, such as deletion and renaming. This
is generally not recommended but included for completeness.
<P>
Default: NO
<DT><B>anon_upload_enable</B>

<DD>
If set to YES, anonymous users will be permitted to upload files under certain
conditions. For this to work, the option
<B>write_enable</B>

must be activated, and the anonymous ftp user must have write permission on
desired upload locations.
<P>
Default: NO
<DT><B>anon_world_readable_only</B>

<DD>
When enabled, anonymous users will only be allowed to download files which
are world readable. This is recognising that the ftp user may own files,
especially in the presence of uploads.
<P>
Default: YES
<DT><B>anonymous_enable</B>

<DD>
Controls whether anonymous logins are permitted or not. If enabled,
both the usernames
<B>ftp</B>

and
<B>anonymous</B>

are recognised as anonymous logins.
<P>
Default: YES
<DT><B>ascii_download_enable</B>

<DD>

When enabled, ASCII mode data transfers will be honoured on downloads.
<P>
Default: NO
<DT><B>ascii_upload_enable</B>

<DD>
When enabled, ASCII mode data transfers will be honoured on uploads.
<P>
Default: NO
<DT><B>async_abor_enable</B>

<DD>
When enabled, a special FTP command known as &quot;async ABOR&quot; will be enabled.
Only ill advised FTP clients will use this feature. Additionally, this feature
is awkward to handle, so it is disabled by default. Unfortunately, some FTP
clients will hang when cancelling a transfer unless this feature is available,
so you may wish to enable it.

<P>
Default: NO
<DT><B>background</B>

<DD>
When enabled, and vsftpd is started in &quot;listen&quot; mode, vsftpd will background
the listener process. i.e. control will immediately be returned to the shell
which launched vsftpd.
<P>
Default: NO
<DT><B>check_shell</B>

<DD>
Note! This option only has an effect for non-PAM builds of vsftpd. If disabled,
vsftpd will not check /etc/shells for a valid user shell for local logins.

<P>
Default: YES
<DT><B>chmod_enable</B>

<DD>
When enables, allows use of the SITE CHMOD command. NOTE! This only applies
to local users. Anonymous users never get to use SITE CHMOD.
<P>
Default: YES
<DT><B>chown_uploads</B>

<DD>
If enabled, all anonymously uploaded files will have the ownership changed
to the user specified in the setting
<B>chown_username</B>.

This is useful from an administrative, and perhaps security, standpoint.
<P>

Default: NO
<DT><B>chroot_list_enable</B>

<DD>
If activated, you may provide a list of local users who are placed in a
chroot() jail in their home directory upon login. The meaning is slightly
different if chroot_local_user is set to YES. In this case, the list becomes
a list of users which are NOT to be placed in a chroot() jail.
By default, the file containing this list is
/etc/vsftpd.chroot_list, but you may override this with the
<B>chroot_list_file</B>

setting.
<P>
Default: NO
<DT><B>chroot_local_user</B>

<DD>
If set to YES, local users will be (by default) placed in a chroot() jail in
their home directory after login.

<B>Warning:</B>

This option has security implications, especially if the users have upload
permission, or shell access. Only enable if you know what you are doing.
Note that these security implications are not vsftpd specific. They apply to
all FTP daemons which offer to put local users in chroot() jails.
<P>
Default: NO
<DT><B>connect_from_port_20</B>

<DD>
This controls whether PORT style data connections use port 20 (ftp-data) on
the server machine. For security reasons, some clients may insist that this
is the case. Conversely, disabling this option enables vsftpd to run with
slightly less privilege.
<P>
Default: NO (but the sample config file enables it)
<DT><B>deny_email_enable</B>

<DD>

If activated, you may provide a list of anonymous password e-mail responses
which cause login to be denied. By default, the file containing this list is
/etc/vsftpd.banned_emails, but you may override this with the
<B>banned_email_file</B>

setting.
<P>
Default: NO
<DT><B>dirlist_enable</B>

<DD>
If set to NO, all directory list commands will give permission denied.
<P>
Default: YES
<DT><B>dirmessage_enable</B>

<DD>
If enabled, users of the FTP server can be shown messages when they first
enter a new directory. By default, a directory is scanned for the
file .message, but that may be overridden with the configuration setting
<B>message_file</B>.

<P>
Default: NO (but the sample config file enables it)
<DT><B>download_enable</B>

<DD>
If set to NO, all download requests will give permission denied.
<P>
Default: YES
<DT><B>dual_log_enable</B>

<DD>

If enabled, two log files are generated in parallel, going by default to
<B>/var/log/xferlog</B>

and
<B>/var/log/vsftpd.log</B>.

The former is a wu-ftpd style transfer log, parseable by standard tools. The
latter is vsftpd's own style log.
<P>
Default: NO
<DT><B>force_dot_files</B>

<DD>
If activated, files and directories starting with . will be shown in directory
listings even if the &quot;a&quot; flag was not used by the client. This override
excludes the &quot;.&quot; and &quot;..&quot; entries.

<P>
Default: NO
<DT><B>force_local_data_ssl</B>

<DD>
Only applies if
<B>ssl_enable</B>

is activated. If activated, all non-anonymous logins are forced to use a secure
SSL connection in order to send and receive data on data connections.
<P>
Default: YES
<DT><B>force_local_logins_ssl</B>

<DD>

Only applies if
<B>ssl_enable</B>

is activated. If activated, all non-anonymous logins are forced to use a secure
SSL connection in order to send the password.
<P>
Default: YES
<DT><B>guest_enable</B>

<DD>
If enabled, all non-anonymous logins are classed as &quot;guest&quot; logins. A guest
login is remapped to the user specified in the
<B>guest_username</B>

setting.
<P>
Default: NO
<DT><B>hide_ids</B>

<DD>
If enabled, all user and group information in directory listings will be
displayed as &quot;ftp&quot;.
<P>
Default: NO
<DT><B>listen</B>

<DD>

If enabled, vsftpd will run in standalone mode. This means that vsftpd must
not be run from an inetd of some kind. Instead, the vsftpd executable is
run once directly. vsftpd itself will then take care of listening for and
handling incoming connections.
<P>
Default: NO
<DT><B>listen_ipv6</B>

<DD>
Like the listen parameter, except vsftpd will listen on an IPv6 socket instead
of an IPv4 one. This parameter and the listen parameter are mutually
exclusive.
<P>
Default: NO
<DT><B>local_enable</B>

<DD>
Controls whether local logins are permitted or not. If enabled, normal
user accounts in /etc/passwd may be used to log in.
<P>
Default: NO

<DT><B>log_ftp_protocol</B>

<DD>
When enabled, all FTP requests and responses are logged, providing the option
xferlog_std_format is not enabled. Useful for debugging.
<P>
Default: NO
<DT><B>ls_recurse_enable</B>

<DD>
When enabled, this setting will allow the use of &quot;ls -R&quot;. This is a minor
security risk, because a ls -R at the top level of a large site may consume
a lot of resources.
<P>
Default: NO
<DT><B>no_anon_password</B>

<DD>
When enabled, this prevents vsftpd from asking for an anonymous password -
the anonymous user will log straight in.
<P>
Default: NO
<DT><B>no_log_lock</B>

<DD>
When enabled, this prevents vsftpd from taking a file lock when writing to log
files. This option should generally not be enabled. It exists to workaround
operating system bugs such as the Solaris / Veritas filesystem combination
which has been observed to sometimes exhibit hangs trying to lock log files.
<P>
Default: NO
<DT><B>one_process_model</B>

<DD>
If you have a Linux 2.4 kernel, it is possible to use a different security
model which only uses one process per connection. It is a less pure security
model, but gains you performance. You really don't want to enable this unless
you know what you are doing, and your site supports huge numbers of
simultaneously connected users.

<P>
Default: NO
<DT><B>passwd_chroot_enable</B>

<DD>
If enabled, along with
<B>chroot_local_user</B>

, then a chroot() jail location may be specified on a per-user basis. Each
user's jail is derived from their home directory string in /etc/passwd. The
occurrence of /./ in the home directory string denotes that the jail is at that
particular location in the path.
<P>
Default: NO
<DT><B>pasv_enable</B>

<DD>

Set to NO if you want to disallow the PASV method of obtaining a data
connection.
<P>
Default: YES
<DT><B>pasv_promiscuous</B>

<DD>
Set to YES if you want to disable the PASV security check that ensures the
data connection originates from the same IP address as the control connection.
Only enable if you know what you are doing! The only legitimate use for this
is in some form of secure tunnelling scheme, or perhaps to facilitate FXP
support.
<P>
Default: NO
<DT><B>port_enable</B>

<DD>
Set to NO if you want to disallow the PORT method of obtaining a data
connection.
<P>
Default: YES

<DT><B>port_promiscuous</B>

<DD>
Set to YES if you want to disable the PORT security check that ensures that
outgoing data connections can only connect to the client. Only enable if
you know what you are doing!
<P>
Default: NO
<DT><B>run_as_launching_user</B>

<DD>
Set to YES if you want vsftpd to run as the user which launched vsftpd. This is
useful where root access is not available. MASSIVE WARNING! Do NOT enable this
option unless you totally know what you are doing, as naive use of this option
can create massive security problems. Specifically, vsftpd does not / cannot
use chroot technology to restrict file access when this option is set (even if
launched by root). A poor substitute could be to use a
<B>deny_file</B>

setting such as {/*,*..*}, but the reliability of this cannot compare to
chroot, and should not be relied on.
If using this option, many restrictions on other options
apply. For example, options requiring privilege such as non-anonymous logins,
upload ownership changing, connecting from port 20 and listen ports less than
1024 are not expected to work. Other options may be impacted.
<P>

Default: NO
<DT><B>secure_email_list_enable</B>

<DD>
Set to YES if you want only a specified list of e-mail passwords for anonymous
logins to be accepted. This is useful as a low-hassle way of restricting
access to low-security content without needing virtual users. When enabled,
anonymous logins are prevented unless the password provided is listed in the
file specified by the
<B>email_password_file</B>

setting. The file format is one password per line, no extra whitespace. The
default filename is /etc/vsftpd.email_passwords.
<P>
Default: NO
<DT><B>session_support</B>

<DD>
This controls whether vsftpd attempts to maintain sessions for logins. If
vsftpd is maintaining sessions, it will try and update utmp and wtmp. It
will also open a pam_session if using PAM to authenticate, and only close
this upon logout. You may wish to disable this if you do not need session
logging, and you wish to give vsftpd more opportunity to run with less
processes and / or less privilege. NOTE - utmp and wtmp support is only
provided with PAM enabled builds.

<P>
Default: NO
<DT><B>setproctitle_enable</B>

<DD>
If enabled, vsftpd will try and show session status information in the system
process listing. In other words, the reported name of the process will change
to reflect what a vsftpd session is doing (idle, downloading etc). You
probably want to leave this off for security purposes.
<P>
Default: NO
<DT><B>ssl_enable</B>

<DD>
If enabled, and vsftpd was compiled against OpenSSL, vsftpd will support secure
connections via SSL. This applies to the control connection (including login)
and also data connections. You'll need a client with SSL support too. NOTE!!
Beware enabling this option. Only enable it if you need it. vsftpd can make no
guarantees about the security of the OpenSSL libraries. By enabling this
option, you are declaring that you trust the security of your installed
OpenSSL library.
<P>
Default: NO
<DT><B>ssl_sslv2</B>

<DD>
Only applies if
<B>ssl_enable</B>

is activated. If enabled, this option will permit SSL v2 protocol connections.
TLS v1 connections are preferred.
<P>
Default: NO
<DT><B>ssl_sslv3</B>

<DD>
Only applies if
<B>ssl_enable</B>

is activated. If enabled, this option will permit SSL v3 protocol connections.
TLS v1 connections are preferred.
<P>
Default: NO
<DT><B>ssl_tlsv1</B>

<DD>
Only applies if
<B>ssl_enable</B>

is activated. If enabled, this option will permit TLS v1 protocol connections.
TLS v1 connections are preferred.
<P>
Default: YES
<DT><B>syslog_enable</B>

<DD>
If enabled, then any log output which would have gone to /var/log/vsftpd.log
goes to the system log instead. Logging is done under the FTPD facility.
<P>
Default: NO
<DT><B>tcp_wrappers</B>

<DD>
If enabled, and vsftpd was compiled with tcp_wrappers support, incoming
connections will be fed through tcp_wrappers access control. Furthermore,
there is a mechanism for per-IP based configuration. If tcp_wrappers sets
the VSFTPD_LOAD_CONF environment variable, then the vsftpd session will try
and load the vsftpd configuration file specified in this variable. 
<P>
Default: NO
<DT><B>text_userdb_names</B>

<DD>
By default, numeric IDs are shown in the user and group fields of directory
listings. You can get textual names by enabling this parameter. It is off
by default for performance reasons.
<P>

Default: NO
<DT><B>tilde_user_enable</B>

<DD>
If enabled, vsftpd will try and resolve pathnames such as ~chris/pics, i.e. a
tilde followed by a username. Note that vsftpd will always resolve the
pathnames ~ and ~/something (in this case the ~ resolves to the initial
login directory). Note that ~user paths will only resolve if the file
<B>/etc/passwd</B>

may be found within the _current_ chroot() jail.
<P>
Default: NO
<DT><B>use_localtime</B>

<DD>
If enabled, vsftpd will display directory listings with the time in your
local time zone. The default is to display GMT. The times returned by the
MDTM FTP command are also affected by this option.

<P>
Default: NO
<DT><B>use_sendfile</B>

<DD>
An internal setting used for testing the relative benefit of using the
sendfile() system call on your platform.
<P>
Default: YES
<DT><B>userlist_deny</B>

<DD>
This option is examined if
<B>userlist_enable</B>

is activated. If you set this setting to NO, then users will be denied login
unless they are explicitly listed in the file specified by
<B>userlist_file</B>.

When login is denied, the denial is issued before the user is asked for a
password.
<P>
Default: YES
<DT><B>userlist_enable</B>

<DD>
If enabled, vsftpd will load a list of usernames, from the filename given by
<B>userlist_file</B>.

If a user tries to log in using a name in this file, they will be denied
before they are asked for a password. This may be useful in preventing
cleartext passwords being transmitted. See also
<B>userlist_deny</B>.

<P>
Default: NO
<DT><B>virtual_use_local_privs</B>

<DD>
If enabled, virtual users will use the same privileges as local users. By
default, virtual users will use the same privileges as anonymous users, which
tends to be more restrictive (especially in terms of write access).
<P>
Default: NO
<DT><B>write_enable</B>

<DD>
This controls whether any FTP commands which change the filesystem are allowed
or not. These commands are: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE and SITE.
<P>
Default: NO
<DT><B>xferlog_enable</B>

<DD>
If enabled, a log file will be maintained detailling uploads and downloads.
By default, this file will be placed at /var/log/vsftpd.log, but this location
may be overridden using the configuration setting

<B>vsftpd_log_file</B>.

<P>
Default: NO (but the sample config file enables it)
<DT><B>xferlog_std_format</B>

<DD>
If enabled, the transfer log file will be written in standard xferlog format,
as used by wu-ftpd. This is useful because you can reuse existing transfer
statistics generators. The default format is more readable, however. The
default location for this style of log file is /var/log/xferlog, but you may
change it with the setting
<B>xferlog_file</B>.

<P>
Default: NO